{
    "docs": [
        {
            "location": "/", 
            "text": "SoftFIRE\n\n\nSoftFIRE is building a federated experimental platform aimed at the construction and experimentation of services and functionalities built on top of NFV and SDN technologies. The platform is a loose federation of already existing testbed owned and operated by distinct organizations for purposes of research and development.\n\n\nSoftFIRE has three main objectives: supporting interoperability, programming and security of the federated testbed. Supporting the programmability of the platform is then a major goal and it is the focus of the SoftFIRE\u2019s Second Open Call.\n\n\nThe SoftFIRE testbeds\n\n\nSoftFIRE federates different European testbeds owned by the partners of the project. Currently the federated Testbed are\n\n\n\n\nRMED\n Cloud Lab from Ericsson, located in Rome;\n\n\nFUSECO Playground\n from FOKUS Fraunhofer/TUB, located in Berlin;\n\n\n5GIC\n from University of Surrey, located in Guildford, Surrey;\n\n\n\n\nNew testbeds are now in the integration phase and may soon join the Federation, e.g.,\n\n\n\n\nDeutsche Telekom\n;\n\n\nAssembly Data System\n (ADS).\n\n\n\n\nIn the past other Testbed were integrate (and currently not available):\n\n\n\n\nJoLNet\n from TIM, spread over several Italian cities;\n\n\n\n\nThe SoftFIRE architecture\n\n\nExperimenters can access the available resources through a single access-point, i.e., the SoftFIRE Experiment Manager, Figure 1. This tool will be under development during the entire lifecycle of the project in order to progressively manage and orchestrate the allocation of several resources (Virtualization, SDN, 5G Resources, Security, and Monitoring). The Experiment Manager provides primitives to authenticate users and to discover, reserve, acquire, monitor and finally release a set of arbitrary resources of the infrastructure. Once a user has been given the authorization to access the system, he can perform experiments on top of the architecture for a certain amount of time. The SoftFIRE Experiment Manager (SEM) will ensure interoperability with other technologies by implementing the standard TOSCA interface.\n\n\n\n\nGet in contact\n\n\n\n\nOur website: \nhttp://softfire.eu\n\n\nSending us an email to \nour mailing list\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Introduction"
        }, 
        {
            "location": "/#softfire", 
            "text": "SoftFIRE is building a federated experimental platform aimed at the construction and experimentation of services and functionalities built on top of NFV and SDN technologies. The platform is a loose federation of already existing testbed owned and operated by distinct organizations for purposes of research and development.  SoftFIRE has three main objectives: supporting interoperability, programming and security of the federated testbed. Supporting the programmability of the platform is then a major goal and it is the focus of the SoftFIRE\u2019s Second Open Call.", 
            "title": "SoftFIRE"
        }, 
        {
            "location": "/#the-softfire-testbeds", 
            "text": "SoftFIRE federates different European testbeds owned by the partners of the project. Currently the federated Testbed are   RMED  Cloud Lab from Ericsson, located in Rome;  FUSECO Playground  from FOKUS Fraunhofer/TUB, located in Berlin;  5GIC  from University of Surrey, located in Guildford, Surrey;   New testbeds are now in the integration phase and may soon join the Federation, e.g.,   Deutsche Telekom ;  Assembly Data System  (ADS).   In the past other Testbed were integrate (and currently not available):   JoLNet  from TIM, spread over several Italian cities;", 
            "title": "The SoftFIRE testbeds"
        }, 
        {
            "location": "/#the-softfire-architecture", 
            "text": "Experimenters can access the available resources through a single access-point, i.e., the SoftFIRE Experiment Manager, Figure 1. This tool will be under development during the entire lifecycle of the project in order to progressively manage and orchestrate the allocation of several resources (Virtualization, SDN, 5G Resources, Security, and Monitoring). The Experiment Manager provides primitives to authenticate users and to discover, reserve, acquire, monitor and finally release a set of arbitrary resources of the infrastructure. Once a user has been given the authorization to access the system, he can perform experiments on top of the architecture for a certain amount of time. The SoftFIRE Experiment Manager (SEM) will ensure interoperability with other technologies by implementing the standard TOSCA interface.", 
            "title": "The SoftFIRE architecture"
        }, 
        {
            "location": "/#get-in-contact", 
            "text": "Our website:  http://softfire.eu  Sending us an email to  our mailing list    \n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Get in contact"
        }, 
        {
            "location": "/softfire-middleware/", 
            "text": "SoftFIRE architecture\n\n\nThe SoftFIRE Middleware is the central software logic of the SoftFIRE platform. It exposes a ReST api that are consumed by a CLI or a Dashboard. The Experimenter can use one of these two tools for interacting with the SoftFIRE platform. The southbound interface is directed to the testbeds. Deutsche Telekom, Fraunhofer FOKUS, Ericsson, University of Surrey and Assembly Data System.\n\n\n\n\nThe SoftFIRE Middleware\n\n\nThe central core logic of the SoftFIRE platform is the SoftFIRE Middleware. The SoftFIRE Middleware is composed by multiple managers, each of them is in charge of a specific kind of resource.\n\n\n\n\nSDN Manager\n manages SDN resources\n\n\nSecurity Manager\n for the Security resources\n\n\nNFV Manager\n is in charge of providing NFV functionalities to the middleware\n\n\nMonitoring manager\n provides experimenter monitoring resource access\n\n\nPhysical Device Manager\n handles the access to the physical resources\n\n\n\n\nThe main component of the infrastructure is the \nExperimenter Manager\n (EM). Other managers register to the EM, so the EM is able to redirect the request coming from the Experimenter to the correct specific manager depending on the kind of resource requested. Its main features include:\n\n\n\n\nResource discovery\n\n\nUnderstand the experiment definition\n\n\nResource reservation\n\n\nResource provisioning\n\n\nProvide Experiment Monitoring\n\n\nUser Authentication\n\n\nUser Authorization\n\n\n\n\nThe protocol in between the managers is \ngRPC\n. For that reason each manager can be implemented in any language that supports gRPC.\n\n\nInteractions\n\n\nThe following image is only for personal knowledge, it is not relevant for the execution of the experiment. The figure defines the high level interactions between the experimenter, the Experiment Manager adn the other Managers, through a sequence diagrams.\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Softfire Middleware"
        }, 
        {
            "location": "/softfire-middleware/#softfire-architecture", 
            "text": "The SoftFIRE Middleware is the central software logic of the SoftFIRE platform. It exposes a ReST api that are consumed by a CLI or a Dashboard. The Experimenter can use one of these two tools for interacting with the SoftFIRE platform. The southbound interface is directed to the testbeds. Deutsche Telekom, Fraunhofer FOKUS, Ericsson, University of Surrey and Assembly Data System.", 
            "title": "SoftFIRE architecture"
        }, 
        {
            "location": "/softfire-middleware/#the-softfire-middleware", 
            "text": "The central core logic of the SoftFIRE platform is the SoftFIRE Middleware. The SoftFIRE Middleware is composed by multiple managers, each of them is in charge of a specific kind of resource.   SDN Manager  manages SDN resources  Security Manager  for the Security resources  NFV Manager  is in charge of providing NFV functionalities to the middleware  Monitoring manager  provides experimenter monitoring resource access  Physical Device Manager  handles the access to the physical resources   The main component of the infrastructure is the  Experimenter Manager  (EM). Other managers register to the EM, so the EM is able to redirect the request coming from the Experimenter to the correct specific manager depending on the kind of resource requested. Its main features include:   Resource discovery  Understand the experiment definition  Resource reservation  Resource provisioning  Provide Experiment Monitoring  User Authentication  User Authorization   The protocol in between the managers is  gRPC . For that reason each manager can be implemented in any language that supports gRPC.", 
            "title": "The SoftFIRE Middleware"
        }, 
        {
            "location": "/softfire-middleware/#interactions", 
            "text": "The following image is only for personal knowledge, it is not relevant for the execution of the experiment. The figure defines the high level interactions between the experimenter, the Experiment Manager adn the other Managers, through a sequence diagrams.    \n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Interactions"
        }, 
        {
            "location": "/getting-started/", 
            "text": "Registration to the Tools\n\n\n\n\nRegister at the Web Portal (and win the open call \n)\n\n\nRegister to redmine \nthis page\n and create an account\n\n\nInstall and configure \nopenvpn\n\n\nDesign your experiment\n\n\nExecute the experiment\n\n\nRetrieve the results\n\n\nTerminate the experiment\n\n\n\n\nWe invite the experimenters to use the SoftFIRE \nSlack channel\n the Issues to address specific problems or support requests. You can also visit the \nForums\n section to open a new discussion or to find useful information shared in the community\n\n\nOpenVPN setup\n\n\n\n\nInstall \nOpenVPN\n for your platform\n\n\nuse the configuration file downloaded from the SoftFIRE Web Portal\n\n\nstart OpenVPN client with administrative rights (or sudo on linux) using the configuration file\n\n\n\n\n\n\nNote\n\n\nif the configuration file download does not work, use \nthis guide\n for creating the configuration file manually\n\n\n\n\nThe Experiment Manager\n\n\nGood, now you are in \n You should be able to reach now the \nExperiment Manager Web page\n. Follow this tutorial on the \nnext page\n for getting more knowledge on how to proceed with your experiment.\n\n\nTestbeds Information and usage\n\n\n\n\nSoftFIRE infrastructure monitoring \nZABBIX\n\n\nInterconnection Benchmarks: \nVPNBenachmark\n\n\n\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#registration-to-the-tools", 
            "text": "Register at the Web Portal (and win the open call  )  Register to redmine  this page  and create an account  Install and configure  openvpn  Design your experiment  Execute the experiment  Retrieve the results  Terminate the experiment   We invite the experimenters to use the SoftFIRE  Slack channel  the Issues to address specific problems or support requests. You can also visit the  Forums  section to open a new discussion or to find useful information shared in the community", 
            "title": "Registration to the Tools"
        }, 
        {
            "location": "/getting-started/#openvpn-setup", 
            "text": "Install  OpenVPN  for your platform  use the configuration file downloaded from the SoftFIRE Web Portal  start OpenVPN client with administrative rights (or sudo on linux) using the configuration file    Note  if the configuration file download does not work, use  this guide  for creating the configuration file manually", 
            "title": "OpenVPN setup"
        }, 
        {
            "location": "/getting-started/#the-experiment-manager", 
            "text": "Good, now you are in   You should be able to reach now the  Experiment Manager Web page . Follow this tutorial on the  next page  for getting more knowledge on how to proceed with your experiment.", 
            "title": "The Experiment Manager"
        }, 
        {
            "location": "/getting-started/#testbeds-information-and-usage", 
            "text": "SoftFIRE infrastructure monitoring  ZABBIX  Interconnection Benchmarks:  VPNBenachmark     \n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Testbeds Information and usage"
        }, 
        {
            "location": "/experiment-manager/", 
            "text": "Experiment Manager\n\n\nAfter having won the Open Call you are officially an Experimenter. First of all, you should have received a certificate that will be used for authentication of the \nSoftFIRE VPN\n. Once the SoftFIRE VPN is active you are able to reach this page, the \nExperimenter Manager\n. This is the page you will see:\n\n\n\n\nLogin\n\n\nEnter your username and password, the password is the same used in the SoftFIRE Web Portal and the username is your \nname+surname\n. The \nSignup\n is currently disabled\n\n\n\n\nNote\n\n\nThe username must be the same that the one you used while registering.\n\n\n\n\nIf the login works correctly you will be redirected on the Experimenter page that looks like the following picture.\n\n\n\n\nResource discovery\n\n\nBy reloading the page, you are also refreshing the list of available resources. These resources have a detailed description and an id. The id will be used in the \ndefinition of the experiment\n, for pointing to the resources you want to reserve. For more details on how to define the experiment, please check the \nnext page\n.\n\n\nResource reservation\n\n\nFor reserving resources, you must define an experiment using the \nTOSCA archive\n. Then you have to upload this archive file in the input box of \nReserve resources\n section. Once the experiment is reserved you will be able to see it under the \nDefined experiment\n section\n\n\nResource provisioning\n\n\nResource Termination\n\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Experiment Manager"
        }, 
        {
            "location": "/experiment-manager/#experiment-manager", 
            "text": "After having won the Open Call you are officially an Experimenter. First of all, you should have received a certificate that will be used for authentication of the  SoftFIRE VPN . Once the SoftFIRE VPN is active you are able to reach this page, the  Experimenter Manager . This is the page you will see:", 
            "title": "Experiment Manager"
        }, 
        {
            "location": "/experiment-manager/#login", 
            "text": "Enter your username and password, the password is the same used in the SoftFIRE Web Portal and the username is your  name+surname . The  Signup  is currently disabled   Note  The username must be the same that the one you used while registering.   If the login works correctly you will be redirected on the Experimenter page that looks like the following picture.", 
            "title": "Login"
        }, 
        {
            "location": "/experiment-manager/#resource-discovery", 
            "text": "By reloading the page, you are also refreshing the list of available resources. These resources have a detailed description and an id. The id will be used in the  definition of the experiment , for pointing to the resources you want to reserve. For more details on how to define the experiment, please check the  next page .", 
            "title": "Resource discovery"
        }, 
        {
            "location": "/experiment-manager/#resource-reservation", 
            "text": "For reserving resources, you must define an experiment using the  TOSCA archive . Then you have to upload this archive file in the input box of  Reserve resources  section. Once the experiment is reserved you will be able to see it under the  Defined experiment  section", 
            "title": "Resource reservation"
        }, 
        {
            "location": "/experiment-manager/#resource-provisioning", 
            "text": "", 
            "title": "Resource provisioning"
        }, 
        {
            "location": "/experiment-manager/#resource-termination", 
            "text": "// Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Resource Termination"
        }, 
        {
            "location": "/experiment-definition/", 
            "text": "Experiment definition\n\n\nThe experiment is defined using \nTopology and Orchestration Specification for Cloud Applications\n (TOSCA). In particular, the Experimenter has to create a \nCSAR\n zip file containing all the necessary files and definitions for letting the \nExperimentManager\n (EM) instantiate everything. The structure of the CSAR is defined as following:\n\n\n\u251c\u2500\u2500 Definitions\n\n|\n   \u2514\u2500\u2500 experiment.yaml\n\u251c\u2500\u2500 Files\n\n|\n   \u2514\u2500\u2500 nsd.csar\n\u2514\u2500\u2500 TOSCA-Metadata\n    \u251c\u2500\u2500 Metadata.yaml\n    \u2514\u2500\u2500 TOSCA.meta\n\n\n\nThere are three two mandatory folders plus one optional. \nDefinitions\n and \nTOSCA-Metadata\n are mandatory folder containing the metadata files and the experiment definition, as described in the following sections. the \nFiles\n folder contains some additional files needed in case some resources specifies extra requirements.\n\n\nTOSCA-Metadata\n\n\nThe TOSCA-Metadata folder contains the TOSCA.meta file and the Metadata.yaml file. The TOSCA.meta file must contain the reference to the template in this case \nEntry-Definitions\n:\n \nDefinitions/experiment.yaml\n. For example:\n\n\nTOSCA-Meta-File-Version\n:\n \n1.0\n\n\nCSAR-Version\n:\n \n1.1\n\n\nCreated-By\n:\n \nMyCompany\n\n\nEntry-Definitions\n:\n \nDefinitions/experiment.yaml\n\n\n\n\n\n\nThe Metadata.yaml contains experiment meta information:\n\n\n\n\nthe name\n\n\nthe start date\n\n\nthe end date\n\n\n\n\nAs follows:\n\nname\n:\n \nExperiment Name\n\n\nstart-data\n:\n \n9/5/17\n \n10:00\n\n\nend-data\n:\n \n10/5/17\n \n10:00\n\n\n\n\n\n\nDefinitions\n\n\nThe experiment.yaml must follow a specific structure. An example is show in the following lines:\n\n\ntosca_definitions_version\n:\n \ntosca_simple_yaml_1_0\n\n\n\ndescription\n:\n \nTemplate for SoftFIRE yaml resource request definition\n\n\n\nimports\n:\n\n  \n-\n \nsoftfire_node_types\n:\n \nhttp://docs.softfire.eu/etc/softfire_node_types.yaml\n\n\n\ntopology_template\n:\n\n  \nnode_templates\n:\n\n    \nzabbix_server\n:\n\n      \ntype\n:\n \nMonitoringNode\n\n      \nproperties\n:\n\n        \nresource_id\n:\n \nmonitoring\n\n        \ntestbed\n:\n \nericsson\n\n\n    \nsdn_ericsson\n:\n\n      \ntype\n:\n \nSDNResource\n\n      \nproperties\n:\n\n        \nresource_id\n:\n \nsdn_ericsson\n\n        \ntestbed\n:\n \nericsson\n\n\n    \niperf\n:\n\n      \ntype\n:\n \nNFVResource\n\n      \nproperties\n:\n\n        \nresource_id\n:\n \niperf\n\n        \nnsd_name\n:\n \nThe Iperf NSD\n\n        \ntestbeds\n:\n \n{\n \nALL\n:\n \nericsson\n \n}\n\n\n\n\n\n\nAs shown in the example, the SoftFIRE experiment yaml file must contain the TOSCA definition version as \ntosca_definitions_version\n:\n \ntosca_simple_yaml_1_0\n. This line is followed by a description of the experiment.\n\n\nThe imports section must be specified as in the example because the EM will only accept specific node types defined in \nthis document\n\n\nEach node type specifies a \nresource_id\n that must be chosen from the available resources. The node name is arbitrary. Each node type can have some additional properties and they can be different from each others. Check the \nnode type specification\n to understand all the node types. However, each node type is specified in the specific manager page:\n\n\n\n\nSDNResource\n: \nSDN Manager\n\n\nNFVResource\n: \nNFV Manager\n\n\nMonitoringResource\n: \nMonitoring Manager\n\n\nSecurityResource\n: \nSecurity Manager\n\n\n\n\nTopology Template\n\n\nThe topology template describe the actual experiment. The required nodes are listed in this section. The types are defined in the \nnode types\n definitions, please refer to the specific manager page for the description of the type.\n\n\nFiles\n\n\nThis folder contains an inner CSAR of a NS. This is only used in case the NFV Resource you want to deploy is not one of the preconfigured one. In this case, the how to build this CSAR is explained in the \nOpen Baton CSAR tutorial\n. And the NfvResource \nfile_name\n field must point to this file.\n\n\nExample\n\n\nA full example can be found \nhere\n\n\n\n\n\n\n\n\n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Define your experiment"
        }, 
        {
            "location": "/experiment-definition/#experiment-definition", 
            "text": "The experiment is defined using  Topology and Orchestration Specification for Cloud Applications  (TOSCA). In particular, the Experimenter has to create a  CSAR  zip file containing all the necessary files and definitions for letting the  ExperimentManager  (EM) instantiate everything. The structure of the CSAR is defined as following:  \u251c\u2500\u2500 Definitions |    \u2514\u2500\u2500 experiment.yaml\n\u251c\u2500\u2500 Files |    \u2514\u2500\u2500 nsd.csar\n\u2514\u2500\u2500 TOSCA-Metadata\n    \u251c\u2500\u2500 Metadata.yaml\n    \u2514\u2500\u2500 TOSCA.meta \n\nThere are three two mandatory folders plus one optional.  Definitions  and  TOSCA-Metadata  are mandatory folder containing the metadata files and the experiment definition, as described in the following sections. the  Files  folder contains some additional files needed in case some resources specifies extra requirements.", 
            "title": "Experiment definition"
        }, 
        {
            "location": "/experiment-definition/#tosca-metadata", 
            "text": "The TOSCA-Metadata folder contains the TOSCA.meta file and the Metadata.yaml file. The TOSCA.meta file must contain the reference to the template in this case  Entry-Definitions :   Definitions/experiment.yaml . For example:  TOSCA-Meta-File-Version :   1.0  CSAR-Version :   1.1  Created-By :   MyCompany  Entry-Definitions :   Definitions/experiment.yaml   The Metadata.yaml contains experiment meta information:   the name  the start date  the end date   As follows: name :   Experiment Name  start-data :   9/5/17   10:00  end-data :   10/5/17   10:00", 
            "title": "TOSCA-Metadata"
        }, 
        {
            "location": "/experiment-definition/#definitions", 
            "text": "The experiment.yaml must follow a specific structure. An example is show in the following lines:  tosca_definitions_version :   tosca_simple_yaml_1_0  description :   Template for SoftFIRE yaml resource request definition  imports : \n   -   softfire_node_types :   http://docs.softfire.eu/etc/softfire_node_types.yaml  topology_template : \n   node_templates : \n     zabbix_server : \n       type :   MonitoringNode \n       properties : \n         resource_id :   monitoring \n         testbed :   ericsson \n\n     sdn_ericsson : \n       type :   SDNResource \n       properties : \n         resource_id :   sdn_ericsson \n         testbed :   ericsson \n\n     iperf : \n       type :   NFVResource \n       properties : \n         resource_id :   iperf \n         nsd_name :   The Iperf NSD \n         testbeds :   {   ALL :   ericsson   }   As shown in the example, the SoftFIRE experiment yaml file must contain the TOSCA definition version as  tosca_definitions_version :   tosca_simple_yaml_1_0 . This line is followed by a description of the experiment.  The imports section must be specified as in the example because the EM will only accept specific node types defined in  this document  Each node type specifies a  resource_id  that must be chosen from the available resources. The node name is arbitrary. Each node type can have some additional properties and they can be different from each others. Check the  node type specification  to understand all the node types. However, each node type is specified in the specific manager page:   SDNResource :  SDN Manager  NFVResource :  NFV Manager  MonitoringResource :  Monitoring Manager  SecurityResource :  Security Manager", 
            "title": "Definitions"
        }, 
        {
            "location": "/experiment-definition/#topology-template", 
            "text": "The topology template describe the actual experiment. The required nodes are listed in this section. The types are defined in the  node types  definitions, please refer to the specific manager page for the description of the type.", 
            "title": "Topology Template"
        }, 
        {
            "location": "/experiment-definition/#files", 
            "text": "This folder contains an inner CSAR of a NS. This is only used in case the NFV Resource you want to deploy is not one of the preconfigured one. In this case, the how to build this CSAR is explained in the  Open Baton CSAR tutorial . And the NfvResource  file_name  field must point to this file.", 
            "title": "Files"
        }, 
        {
            "location": "/experiment-definition/#example", 
            "text": "A full example can be found  here    \n      // Creating custom :external selector\n      $.expr[':'].external = function(obj){\n          return !obj.href.match(/^mailto\\:/)\n                  && (obj.hostname != location.hostname);\n      };\n      $(function(){\n        $('a:external').addClass('external');\n        $(\".external\").attr('target','_blank');\n      })", 
            "title": "Example"
        }, 
        {
            "location": "/nfv-manager/", 
            "text": "NFV Manager\n\n\nThe NFV Manager is the manager interfacing with Open Baton. In case the Experimenter wants to deploy a different NS from the preconfigured ones, it is required to follow \nthis tutorial\n\n\nNFV Resource\n\n\nThe NfvResource node type is defined as follows, as per \nnode types page\n:\n\n\nNfvResource\n:\n\n    \nderived_from\n:\n \neu.softfire.BaseResource\n\n    \ndescription\n:\n \nDefines a NFV resource request in the SoftFIRE Middleware\n\n    \nproperties\n:\n\n      \ntestbeds\n:\n\n        \ntype\n:\n \nmap\n\n        \nentry_schema\n:\n\n          \ndescription\n:\n \nmapping between vnf types and testbed. Or\n\n                       \nall\n:\ntestbed_name\n for all in one\n\n          \ntype\n:\n \nstring\n\n      \nnsd_name\n:\n\n        \ntype\n:\n \nstring\n\n      \nfile_name\n:\n\n        \ntype\n:\n \nstring\n\n        \nrequired\n:\n \nfalse\n\n\n\n\n\n\nThis node type has different properties:\n\n\n\n\nresource_id\n: The resource id that can be found from the list resource table.\n\n\ntestbeds\n: a map where you can define the testbed where each VNF will be deployed. It is defined as vnf type and testbed name\n\n\nnsd_name\n: the name of the NS\n\n\nfile_name\n: in case the preconfigured NS are not sufficient for your experiment you can upload your own NS in CSAR format and place it in the Files folder. This field contains the name of the file", 
            "title": "NFV Manager"
        }, 
        {
            "location": "/nfv-manager/#nfv-manager", 
            "text": "The NFV Manager is the manager interfacing with Open Baton. In case the Experimenter wants to deploy a different NS from the preconfigured ones, it is required to follow  this tutorial", 
            "title": "NFV Manager"
        }, 
        {
            "location": "/nfv-manager/#nfv-resource", 
            "text": "The NfvResource node type is defined as follows, as per  node types page :  NfvResource : \n     derived_from :   eu.softfire.BaseResource \n     description :   Defines a NFV resource request in the SoftFIRE Middleware \n     properties : \n       testbeds : \n         type :   map \n         entry_schema : \n           description :   mapping between vnf types and testbed. Or \n                        all : testbed_name  for all in one \n           type :   string \n       nsd_name : \n         type :   string \n       file_name : \n         type :   string \n         required :   false   This node type has different properties:   resource_id : The resource id that can be found from the list resource table.  testbeds : a map where you can define the testbed where each VNF will be deployed. It is defined as vnf type and testbed name  nsd_name : the name of the NS  file_name : in case the preconfigured NS are not sufficient for your experiment you can upload your own NS in CSAR format and place it in the Files folder. This field contains the name of the file", 
            "title": "NFV Resource"
        }, 
        {
            "location": "/sdn-manager/", 
            "text": "SDN Manager\n\n\nThe SDN manager is in charge of managing access to the SDN resources provided by some testbeds.\n\n\nThe SDN manager keeps track of the API endpoints towards the SDN proxy services that are used to filter requests \nfrom experimenters to enabe multi tenancy that is by default not provided by the used SDN controllers.\n\n\nThe SDN manager uses the following Experiment LifeCycles:\n\n\n\n\nList\n\n\nProvision\n\n\nRelease\n\n\n\n\nMessage contents\n\n\nThere are three parties involved into the communication:\n\n\n\n\nExperimet Manager (EM)\n\n\nSDN Manager (SM)\n\n\nSDN Proxie(s)\n\n\n\n\nList Resources\n\n\nInvolved: Experiment manager, SDN Manager \n\n\nResponse (SM-\nEM): \nTOSCA encoded object of type SDNResource for each supported SDN endpoint (e.g. for each testbed)\n\n\n\n\nresource-id\n\n\ntestbed-id\n\n\ndescription text\n\n\n\n\nProvision Resources\n\n\nInvolved: Experiment manager, SDN Manager, SDN Proxy\n\n\nRequest (EM-\nSM):\nTOSCA encoded object with a list SDNResource types for each requested SDN resource. (Each testbed has its own resource.)\n\n\n\n\nresource-id(s)\n\n\nUserInformation\n\n\nusername\n\n\npassword (can be used to create an account with the users password)\n\n\ntenant-id for each used testbed\n\n\nexperiment-id (token used for this experiment)\n\n\n\n\nRequest (SM-\nproxie(s)):\nREST request to resource /SDNroxySetup with JSON object in request-body:\n\n\n\n\ntoken (experiment-id)\n\n\ntenant-id (for the associated testbed)\n\n\n\n\nResponse (proxie-\nSM):\nREST response body JSON encoded:\n\n\n\n\nendpoint URL\n\n\nflow-table-range (list of decimals)\n\n\n\n\nResponse (SM-\nEM):\nList of resource objects\n\n\n\n\nresource-id\n\n\nURI\n\n\nflow-table-range\n\n\ntoken?\n\n\n\n\nRelease Resources\n\n\nInvolved: Experiment manager, SDN Manager, SDN Proxy\n\n\nRequest (EM-\nSM):\nList or resource-id(s) to release\n\n\n\n\nrespurce-id\n\n\ntoken\n\n\n\n\nRequest (SM-\nproxie(s)):\nREST request to resouce /SDNproxyRemove witgh JSON body\n\n\n\n\ntoken", 
            "title": "SDN Manager"
        }, 
        {
            "location": "/sdn-manager/#sdn-manager", 
            "text": "The SDN manager is in charge of managing access to the SDN resources provided by some testbeds.  The SDN manager keeps track of the API endpoints towards the SDN proxy services that are used to filter requests \nfrom experimenters to enabe multi tenancy that is by default not provided by the used SDN controllers.  The SDN manager uses the following Experiment LifeCycles:   List  Provision  Release", 
            "title": "SDN Manager"
        }, 
        {
            "location": "/sdn-manager/#message-contents", 
            "text": "There are three parties involved into the communication:   Experimet Manager (EM)  SDN Manager (SM)  SDN Proxie(s)", 
            "title": "Message contents"
        }, 
        {
            "location": "/sdn-manager/#list-resources", 
            "text": "Involved: Experiment manager, SDN Manager   Response (SM- EM): \nTOSCA encoded object of type SDNResource for each supported SDN endpoint (e.g. for each testbed)   resource-id  testbed-id  description text", 
            "title": "List Resources"
        }, 
        {
            "location": "/sdn-manager/#provision-resources", 
            "text": "Involved: Experiment manager, SDN Manager, SDN Proxy  Request (EM- SM):\nTOSCA encoded object with a list SDNResource types for each requested SDN resource. (Each testbed has its own resource.)   resource-id(s)  UserInformation  username  password (can be used to create an account with the users password)  tenant-id for each used testbed  experiment-id (token used for this experiment)   Request (SM- proxie(s)):\nREST request to resource /SDNroxySetup with JSON object in request-body:   token (experiment-id)  tenant-id (for the associated testbed)   Response (proxie- SM):\nREST response body JSON encoded:   endpoint URL  flow-table-range (list of decimals)   Response (SM- EM):\nList of resource objects   resource-id  URI  flow-table-range  token?", 
            "title": "Provision Resources"
        }, 
        {
            "location": "/sdn-manager/#release-resources", 
            "text": "Involved: Experiment manager, SDN Manager, SDN Proxy  Request (EM- SM):\nList or resource-id(s) to release   respurce-id  token   Request (SM- proxie(s)):\nREST request to resouce /SDNproxyRemove witgh JSON body   token", 
            "title": "Release Resources"
        }, 
        {
            "location": "/security-manager/", 
            "text": "Security Manager\n\n\nThis is a Security Manager page\n\n\nSecurity Resource\n\n\nExplain SecurityResource as per \nnode types page", 
            "title": "Security Manager"
        }, 
        {
            "location": "/security-manager/#security-manager", 
            "text": "This is a Security Manager page", 
            "title": "Security Manager"
        }, 
        {
            "location": "/security-manager/#security-resource", 
            "text": "Explain SecurityResource as per  node types page", 
            "title": "Security Resource"
        }, 
        {
            "location": "/monitoring-manager/", 
            "text": "Monitoring Manager\n\n\nThis is a SDN Manager page\n\n\nMonitoring resource\n\n\nExplain MonitoringResource as per \nnode types page", 
            "title": "Monitoring Manager"
        }, 
        {
            "location": "/monitoring-manager/#monitoring-manager", 
            "text": "This is a SDN Manager page", 
            "title": "Monitoring Manager"
        }, 
        {
            "location": "/monitoring-manager/#monitoring-resource", 
            "text": "Explain MonitoringResource as per  node types page", 
            "title": "Monitoring resource"
        }, 
        {
            "location": "/sdn-manager/", 
            "text": "SDN Manager\n\n\nThe SDN manager is in charge of managing access to the SDN resources provided by some testbeds.\n\n\nThe SDN manager keeps track of the API endpoints towards the SDN proxy services that are used to filter requests \nfrom experimenters to enabe multi tenancy that is by default not provided by the used SDN controllers.\n\n\nThe SDN manager uses the following Experiment LifeCycles:\n\n\n\n\nList\n\n\nProvision\n\n\nRelease\n\n\n\n\nMessage contents\n\n\nThere are three parties involved into the communication:\n\n\n\n\nExperimet Manager (EM)\n\n\nSDN Manager (SM)\n\n\nSDN Proxie(s)\n\n\n\n\nList Resources\n\n\nInvolved: Experiment manager, SDN Manager \n\n\nResponse (SM-\nEM): \nTOSCA encoded object of type SDNResource for each supported SDN endpoint (e.g. for each testbed)\n\n\n\n\nresource-id\n\n\ntestbed-id\n\n\ndescription text\n\n\n\n\nProvision Resources\n\n\nInvolved: Experiment manager, SDN Manager, SDN Proxy\n\n\nRequest (EM-\nSM):\nTOSCA encoded object with a list SDNResource types for each requested SDN resource. (Each testbed has its own resource.)\n\n\n\n\nresource-id(s)\n\n\nUserInformation\n\n\nusername\n\n\npassword (can be used to create an account with the users password)\n\n\ntenant-id for each used testbed\n\n\nexperiment-id (token used for this experiment)\n\n\n\n\nRequest (SM-\nproxie(s)):\nREST request to resource /SDNroxySetup with JSON object in request-body:\n\n\n\n\ntoken (experiment-id)\n\n\ntenant-id (for the associated testbed)\n\n\n\n\nResponse (proxie-\nSM):\nREST response body JSON encoded:\n\n\n\n\nendpoint URL\n\n\nflow-table-range (list of decimals)\n\n\n\n\nResponse (SM-\nEM):\nList of resource objects\n\n\n\n\nresource-id\n\n\nURI\n\n\nflow-table-range\n\n\ntoken?\n\n\n\n\nRelease Resources\n\n\nInvolved: Experiment manager, SDN Manager, SDN Proxy\n\n\nRequest (EM-\nSM):\nList or resource-id(s) to release\n\n\n\n\nrespurce-id\n\n\ntoken\n\n\n\n\nRequest (SM-\nproxie(s)):\nREST request to resouce /SDNproxyRemove witgh JSON body\n\n\n\n\ntoken", 
            "title": "SDN Manager"
        }, 
        {
            "location": "/sdn-manager/#sdn-manager", 
            "text": "The SDN manager is in charge of managing access to the SDN resources provided by some testbeds.  The SDN manager keeps track of the API endpoints towards the SDN proxy services that are used to filter requests \nfrom experimenters to enabe multi tenancy that is by default not provided by the used SDN controllers.  The SDN manager uses the following Experiment LifeCycles:   List  Provision  Release", 
            "title": "SDN Manager"
        }, 
        {
            "location": "/sdn-manager/#message-contents", 
            "text": "There are three parties involved into the communication:   Experimet Manager (EM)  SDN Manager (SM)  SDN Proxie(s)", 
            "title": "Message contents"
        }, 
        {
            "location": "/sdn-manager/#list-resources", 
            "text": "Involved: Experiment manager, SDN Manager   Response (SM- EM): \nTOSCA encoded object of type SDNResource for each supported SDN endpoint (e.g. for each testbed)   resource-id  testbed-id  description text", 
            "title": "List Resources"
        }, 
        {
            "location": "/sdn-manager/#provision-resources", 
            "text": "Involved: Experiment manager, SDN Manager, SDN Proxy  Request (EM- SM):\nTOSCA encoded object with a list SDNResource types for each requested SDN resource. (Each testbed has its own resource.)   resource-id(s)  UserInformation  username  password (can be used to create an account with the users password)  tenant-id for each used testbed  experiment-id (token used for this experiment)   Request (SM- proxie(s)):\nREST request to resource /SDNroxySetup with JSON object in request-body:   token (experiment-id)  tenant-id (for the associated testbed)   Response (proxie- SM):\nREST response body JSON encoded:   endpoint URL  flow-table-range (list of decimals)   Response (SM- EM):\nList of resource objects   resource-id  URI  flow-table-range  token?", 
            "title": "Provision Resources"
        }, 
        {
            "location": "/sdn-manager/#release-resources", 
            "text": "Involved: Experiment manager, SDN Manager, SDN Proxy  Request (EM- SM):\nList or resource-id(s) to release   respurce-id  token   Request (SM- proxie(s)):\nREST request to resouce /SDNproxyRemove witgh JSON body   token", 
            "title": "Release Resources"
        }, 
        {
            "location": "/openvpnconfig/", 
            "text": "Open Vpn Manual Configuration\n\n\nThe OpenVPN server provides access into the SoftFIRE VPN for Experimenters.\nThe Experimenters can access the VPN using their experimenter certificate that was generated during the registration process.\n\n\nThere are two options to create the OpenVPN configuration file. You need to follow only one of these.\n\n\nOption one: Experimenter configuration file with external certificate file.\n\n\nThis solution needs two files that need to be placed in one folder, but it is easier to create.\n\n\nCreate a file \"softfire.ovpn\" and put the following text inside and store it in the same folder as the downloaded \"certificate.pem\"\n\n\ndev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind\n\nca\n\n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE-----\n\n/ca\n\ncert certificate.pem\nkey certificate.pem\n\n\n\n\n\nOption two: config file with embedded keys\n\n\nThis solution only needs a single file, but this file as to be edited manually.\n\n\nCreate a file \"softfire.ovpn\" and put the following text inside and copy and paste your certificate from the downloaded \"certificate.pem\" into the \ncert\n section and your private key into the \nkey\n section\n\n\ndev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind\n\nca\n\n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE-----\n\n/ca\n\n\ncert\n\n-----BEGIN CERTIFICATE-----\n**Paste Your Cert Text here**\n\n-----END CERTIFICATE-----\n\n/cert\n\n\nkey\n\n-----BEGIN PRIVATE KEY-----\n**Paste Your Cert Private Key here**\n\n-----END PRIVATE KEY-----\n\n/key", 
            "title": "OpenVPN Manual configuration"
        }, 
        {
            "location": "/openvpnconfig/#open-vpn-manual-configuration", 
            "text": "The OpenVPN server provides access into the SoftFIRE VPN for Experimenters.\nThe Experimenters can access the VPN using their experimenter certificate that was generated during the registration process.  There are two options to create the OpenVPN configuration file. You need to follow only one of these.", 
            "title": "Open Vpn Manual Configuration"
        }, 
        {
            "location": "/openvpnconfig/#option-one-experimenter-configuration-file-with-external-certificate-file", 
            "text": "This solution needs two files that need to be placed in one folder, but it is easier to create.  Create a file \"softfire.ovpn\" and put the following text inside and store it in the same folder as the downloaded \"certificate.pem\"  dev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind ca \n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE----- /ca \ncert certificate.pem\nkey certificate.pem", 
            "title": "Option one: Experimenter configuration file with external certificate file."
        }, 
        {
            "location": "/openvpnconfig/#option-two-config-file-with-embedded-keys", 
            "text": "This solution only needs a single file, but this file as to be edited manually.  Create a file \"softfire.ovpn\" and put the following text inside and copy and paste your certificate from the downloaded \"certificate.pem\" into the  cert  section and your private key into the  key  section  dev tun\nclient\nremote softfire-vpn.av.tu-berlin.de 443\n;proto udp\nproto tcp\nnobind\npersist-key\npersist-tun\ncomp-lzo\nkeepalive 10 120\nverb 3\nremote-cert-tls server\nresolv-retry infinite\nnobind ca \n-----BEGIN CERTIFICATE-----\nMIIFAzCCA+ugAwIBAgIQLJdZE0PTZ7/N1PiCOH1EOzANBgkqhkiG9w0BAQsFADCB\npTELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJlcmxpbjEPMA0GA1UEBwwGQmVybGlu\nMRIwEAYDVQQKDAlUVSBCZXJsaW4xCzAJBgNVBAsMAkFWMR4wHAYDVQQDDBVUVSBC\nZXJsaW4gU29mdEZJUkUgQ0ExMzAxBgkqhkiG9w0BCQEWJGF2LWluZnJhc3RydWN0\ndXJlQGxpc3RzLnR1LWJlcmxpbi5kZTAeFw0xNjA2MjcxNTMxNTlaFw0yMTA2MjYx\nNTMxNTlaMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQH\nDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAcBgNV\nBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYtaW5m\ncmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlMIIBIjANBgkqhkiG9w0BAQEF\nAAOCAQ8AMIIBCgKCAQEA1Fk2hti4hsahT8t+8fEfxrSAiJJDuXyj5g48mn37u8o2\n0VK/9STmG7nCiZQwtEIiz9MpxDo6oeap8qwJacp5V6RTZ5d3sPypfM5S06vxTOZX\nKsvWWv7E7An+O0J8I819mfg3/SkJJmu12i13f+r03+29hnlPZaXuqZnQmKFfolpP\nGHTaPLbn5aED17Lyg0eyFiCCXBes5FM9fBuqbSU+jDmfwd+nBcJG61oHdrGvp5vZ\ngUQm8X43sMeb/dP8ncHP3cft47A5QHc+GKDNroWW43almezOgByzzckG39eWqV0h\nE18Bts5y9BUdsYNJdZaLEWAPMLR8Li3LAx1gd2YVwQIDAQABo4IBKzCCAScwEgYD\nVR0TAQH/BAgwBgEB/wIBADAOBgNVHQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDMfaUfm\nl6CQdssrpTLv4WG81BHhMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssrpTLv4WG8\n1BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYD\nVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwCQVYxHjAc\nBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJARYkYXYt\naW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nnv83U+II4\nfUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQCz6j6JMXbBUG0j4Ijx4JsuuuHaJBmBB/eN\nS6qthzg8F6wC45K2Xel0T3+uhFmnBbylWIVP0Xl3SthGeukJqT2VgnbRbYt6I17x\not8eUyZb495moDJ8wWN8XU6Atcl6igB2tNmsZkj5OnaepQTyy1Ocl8akHN4TNKD5\nolNy0TpH70+FfzuDRKGqfzivAT5P3l1zyRcRDSk4wVEXFB/95ZqX90AvPiLOfGAe\naEIbwcXwcVxYma83LhCiBZo3SQ1wH+cvOrDwQ/SY0u2fndpf5WqAeBj9A3aYgqCS\nlMg366OjDzFpNaTLX4HQPX682AuMj338NPLoPXXfyHxmIMN4ZRcs\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIFmTCCBIGgAwIBAgICAQIwDQYJKoZIhvcNAQELBQAwgaUxCzAJBgNVBAYTAkRF\nMQ8wDQYDVQQIDAZCZXJsaW4xDzANBgNVBAcMBkJlcmxpbjESMBAGA1UECgwJVFUg\nQmVybGluMQswCQYDVQQLDAJBVjEeMBwGA1UEAwwVVFUgQmVybGluIFNvZnRGSVJF\nIENBMTMwMQYJKoZIhvcNAQkBFiRhdi1pbmZyYXN0cnVjdHVyZUBsaXN0cy50dS1i\nZXJsaW4uZGUwHhcNMTYwNzI3MTQ0ODQzWhcNMTgwNzI3MTQ0ODQzWjBgMQswCQYD\nVQQGEwJERTEPMA0GA1UECAwGQmVybGluMQ8wDQYDVQQHDAZCZXJsaW4xGTAXBgNV\nBAoMEEZyYXVuaG9mZXIgRk9LVVMxFDASBgNVBAMMC0ZpdGVhZ2xlIENBMIICIjAN\nBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA3Hy2l7zLZRE306xu15X9jZFub7SS\nyiQxndC4zDun+av/TiQJU/gK1/TPo6Y0u2+sqpuTPCh6XBA2N63AmZzpZpSAMBux\nJTm+BOYIqa0GJ5tW5tKBMPH3pITdgsh256ckyf57LUKH66yQgTfJskpF5ovDMNUq\n6vZAvEVjXa/A3tUaB5NxcQeLixKJJrmuh2TBxN3OOWNKD8vyal6KKOTYpeaillZ9\nzqmtNr9nXnlhfMBZPXJBQmw2OOlaX5uIuceMkpg6TIVrNlbdJuS9TeTVmx1MtmVm\n73Q5ii2FcopYrV1v8W4C3atxFCTfmFRlrRm6sJ7ZRQhGtJphPZczwtqcC7MKJjQN\nbYeAG8BQHRnVQrVXr5+jrysqFWGoXGDISVprm0DjGij5ok2jIYaSgBpLVrD3e4eC\nLgYH58+f8u5tQxE1TxGCudAb0fSMy+GAe+5qbbEQkLc/+WXnGi4xTTozebmccJs8\nmbu5/BICYu5e53B58DFJy8x8qjLQjXuvspKqcPT5Dp07LmIu30sgrXG+Mdq1cWjV\nVHx9XwJz1c89Oy/6TandrznRfGVNAzXPenm3gr0wib7qwWlsSPTrBOcXyjMthV27\nwX6MK5GWWH+Uk5Z9a/V2JE9+J3KtEtk8D4xSEIQJ+pJZtXh1YxNzzYhY/czJLYdA\nloVSHOjwDmPtbEECAwEAAaOCARUwggERMAwGA1UdEwQFMAMBAf8wHQYDVR0OBBYE\nFMKA1MAJkTlwFZ5USVhoOJkZO4CDMIHhBgNVHSMEgdkwgdaAFDMfaUfml6CQdssr\npTLv4WG81BHhoYGrpIGoMIGlMQswCQYDVQQGEwJERTEPMA0GA1UECAwGQmVybGlu\nMQ8wDQYDVQQHDAZCZXJsaW4xEjAQBgNVBAoMCVRVIEJlcmxpbjELMAkGA1UECwwC\nQVYxHjAcBgNVBAMMFVRVIEJlcmxpbiBTb2Z0RklSRSBDQTEzMDEGCSqGSIb3DQEJ\nARYkYXYtaW5mcmFzdHJ1Y3R1cmVAbGlzdHMudHUtYmVybGluLmRlghAsl1kTQ9Nn\nv83U+II4fUQ7MA0GCSqGSIb3DQEBCwUAA4IBAQAYcCmGctVfnRZ6oL2z6qvn9Dhm\nHpt1zIC0pR7vKroi8OyGpv+BB7gHEXX0ecq8VtLKTcXWYR+7NdZS7IX8lyd81LiX\nXB1x09hEKH8O71T9v3TAMVtFDHmUito8cJQtPJFlVLZyL5xF+H0VHHEED4JP8xp4\nKPFd2Rt0ixTNnE3ccUgumty1X+xq0rWSCzOXy11TxOv2tzB7TA/O85XRw9QzE3jw\n4WjTS7tH9Phe/JTxbnhADS7k5mHZ+FDmX4xeTrXKNKv9+W1Qz9qQQ441IWpokBow\ntBeOMiadvRRQ2fhNuKCpgVUgyUyts0fFvDwJhLTnUqEbdgr19HbLO8GwqPbk\n-----END CERTIFICATE----- /ca  cert \n-----BEGIN CERTIFICATE-----\n**Paste Your Cert Text here**\n\n-----END CERTIFICATE----- /cert  key \n-----BEGIN PRIVATE KEY-----\n**Paste Your Cert Private Key here**\n\n-----END PRIVATE KEY----- /key", 
            "title": "Option two: config file with embedded keys"
        }
    ]
}